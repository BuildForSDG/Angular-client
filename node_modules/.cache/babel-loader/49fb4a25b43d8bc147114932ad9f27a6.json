{"ast":null,"code":"/**\n * Auth Service\n */\nimport axios from 'axios';\nimport { API_URL } from '../config';\nvar AuthService = {\n  login: function login(email, password) {\n    return axios.post(API_URL + '/api/users/login', {\n      email: email,\n      password: password\n    }).then(function (res) {\n      var token = console.log(res.data.token); // localStorage.setItem('jwtToken', token);\n    });\n  },\n  signup: function signup(firstName, lastName, email, password, phone, nationalId) {\n    return axios.post(API_URL + '/api/users/signup', {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      phone: phone,\n      nationalId: nationalId\n    });\n  },\n  getProfile: function getProfile() {\n    return axios.get(API_URL + '/api/users/:id', {\n      headers: this.authHeader()\n    }).catch(alert('error getting profile'));\n  },\n  logout: function logout() {\n    localStorage.removeItem('token');\n  },\n  getToken: function getToken() {\n    return localStorage.getItem('token');\n  },\n  saveToken: function saveToken(token) {\n    localStorage.setItem('token', token);\n  },\n  authHeader: function authHeader() {\n    return {\n      Authorization: this.getToken()\n    };\n  }\n};\nexport default AuthService;","map":{"version":3,"sources":["/home/realoj/RealProjects/Andela-FB-Innovators/zero-hunger-frontend/src/services/AuthService.js"],"names":["axios","API_URL","AuthService","login","email","password","post","then","res","token","console","log","data","signup","firstName","lastName","phone","nationalId","getProfile","get","headers","authHeader","catch","alert","logout","localStorage","removeItem","getToken","getItem","saveToken","setItem","Authorization"],"mappings":"AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,WAAW,GAAG;AACnBC,EAAAA,KAAK,EAAE,eAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACjC,WAAOL,KAAK,CACVM,IADK,CACAL,OAAO,GAAG,kBADV,EAC8B;AAAEG,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAD9B,EAELE,IAFK,CAEA,UAACC,GAAD,EAAS;AACd,UAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAJ,CAASH,KAArB,CAAd,CADc,CAEd;AACA,KALK,CAAP;AAMA,GARkB;AASnBI,EAAAA,MAAM,EAAE,gBAAUC,SAAV,EAAqBC,QAArB,EAA+BX,KAA/B,EAAsCC,QAAtC,EAAgDW,KAAhD,EAAuDC,UAAvD,EAAmE;AAC1E,WAAOjB,KAAK,CAACM,IAAN,CAAWL,OAAO,GAAG,mBAArB,EAA0C;AAChDa,MAAAA,SAAS,EAATA,SADgD;AAEhDC,MAAAA,QAAQ,EAARA,QAFgD;AAGhDX,MAAAA,KAAK,EAALA,KAHgD;AAIhDC,MAAAA,QAAQ,EAARA,QAJgD;AAKhDW,MAAAA,KAAK,EAALA,KALgD;AAMhDC,MAAAA,UAAU,EAAVA;AANgD,KAA1C,CAAP;AAQA,GAlBkB;AAmBnBC,EAAAA,UAAU,EAAE,sBAAY;AACvB,WAAOlB,KAAK,CACVmB,GADK,CACDlB,OAAO,GAAG,gBADT,EAC2B;AAChCmB,MAAAA,OAAO,EAAE,KAAKC,UAAL;AADuB,KAD3B,EAILC,KAJK,CAICC,KAAK,CAAC,uBAAD,CAJN,CAAP;AAKA,GAzBkB;AA0BnBC,EAAAA,MAAM,EAAE,kBAAY;AACnBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,GA5BkB;AA6BnBC,EAAAA,QAAQ,EAAE,oBAAY;AACrB,WAAOF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAP;AACA,GA/BkB;AAgCnBC,EAAAA,SAAS,EAAE,mBAAUpB,KAAV,EAAiB;AAC3BgB,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BrB,KAA9B;AACA,GAlCkB;AAmCnBY,EAAAA,UAAU,EAAE,sBAAY;AACvB,WAAO;AAAEU,MAAAA,aAAa,EAAE,KAAKJ,QAAL;AAAjB,KAAP;AACA;AArCkB,CAApB;AAwCA,eAAezB,WAAf","sourcesContent":["/**\n * Auth Service\n */\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\nconst AuthService = {\n\tlogin: function (email, password) {\n\t\treturn axios\n\t\t\t.post(API_URL + '/api/users/login', { email, password })\n\t\t\t.then((res) => {\n\t\t\t\tconst token = console.log(res.data.token);\n\t\t\t\t// localStorage.setItem('jwtToken', token);\n\t\t\t});\n\t},\n\tsignup: function (firstName, lastName, email, password, phone, nationalId) {\n\t\treturn axios.post(API_URL + '/api/users/signup', {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tphone,\n\t\t\tnationalId,\n\t\t});\n\t},\n\tgetProfile: function () {\n\t\treturn axios\n\t\t\t.get(API_URL + '/api/users/:id', {\n\t\t\t\theaders: this.authHeader(),\n\t\t\t})\n\t\t\t.catch(alert('error getting profile'));\n\t},\n\tlogout: function () {\n\t\tlocalStorage.removeItem('token');\n\t},\n\tgetToken: function () {\n\t\treturn localStorage.getItem('token');\n\t},\n\tsaveToken: function (token) {\n\t\tlocalStorage.setItem('token', token);\n\t},\n\tauthHeader: function () {\n\t\treturn { Authorization: this.getToken() };\n\t},\n};\n\nexport default AuthService;\n"]},"metadata":{},"sourceType":"module"}