{"ast":null,"code":"import _defineProperty from \"/home/realoj/RealProjects/msoto-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/realoj/RealProjects/msoto-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/realoj/RealProjects/msoto-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/realoj/RealProjects/msoto-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/realoj/RealProjects/msoto-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/realoj/RealProjects/msoto-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/realoj/RealProjects/msoto-frontend/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Loader } from 'semantic-ui-react';\nimport axios from 'axios';\nimport validateInput from '../validators/login';\nimport { loginUser } from '../store/actions/auth';\n\nvar LoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.isValid()) {\n        _this.setState({\n          errors: {},\n          isLoading: true\n        });\n\n        axios.post('http://localhost:5000/api/users/login', _this.state).then(function (response) {\n          console.log(response);\n          if (response) // alert('signup successful!')\n            _this.props.history.push('/Login');\n        }).catch(function (error) {\n          console.log(error);\n        });\n\n        _this.props.registerUser(_this.state, _this.props.history);\n      }\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.isValid = function () {\n      var _validateInput = validateInput(_this.state),\n          errors = _validateInput.errors,\n          isValid = _validateInput.isValid;\n\n      if (!isValid) {\n        _this.setState({\n          errors: errors\n        });\n      }\n\n      return isValid;\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.user.isAuthenticated) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.user && nextProps.user.isAuthenticated) {\n        this.props.history.push('/');\n      }\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors,\n          isLoading: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          email = _this$state.email,\n          password = _this$state.password,\n          isLoading = _this$state.isLoading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100%'\n        },\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: \"/assets/images/logo.png\",\n        size: \"tiny\",\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        color: \"teal\",\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n        size: \"large\",\n        onSubmit: this.onSubmit,\n        error: errors.loginError ? true : false,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        stacked: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        name: \"email\",\n        placeholder: \"E-mail\",\n        defaultValue: email,\n        error: errors.email ? true : false,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        name: \"password\",\n        placeholder: \"Password\",\n        type: \"password\",\n        defaultValue: password,\n        error: errors.password ? true : false,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Message, {\n        error: true,\n        content: errors.loginError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"teal\",\n        fluid: true,\n        size: \"large\",\n        disabled: isLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, !isLoading ? 'Login' : /*#__PURE__*/React.createElement(Loader, {\n        active: true,\n        inverted: true,\n        inline: true,\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/sign-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 38\n        }\n      }, \"Sign up!\")))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nLoginForm.propTypes = {\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser\n})(LoginForm);","map":{"version":3,"sources":["/home/realoj/RealProjects/msoto-frontend/src/pages/Login.js"],"names":["React","Component","withRouter","Link","connect","PropTypes","Button","Form","Grid","Header","Image","Message","Segment","Loader","axios","validateInput","loginUser","LoginForm","props","onSubmit","e","preventDefault","isValid","setState","errors","isLoading","post","state","then","response","console","log","history","push","catch","error","registerUser","onChange","target","name","value","email","password","user","isAuthenticated","nextProps","height","maxWidth","loginError","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Image, Message, Segment,\n Loader } from 'semantic-ui-react'\n import axios from 'axios';\n\nimport validateInput from '../validators/login';\nimport { loginUser } from '../store/actions/auth';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user && nextProps.user.isAuthenticated) {\n      this.props.history.push('/');\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n        isLoading: false\n      });\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      axios.post('http://localhost:5000/api/users/login', this.state)\n      .then(response => {\n        console.log(response)\n        if(response)\n    // alert('signup successful!')\n    this.props.history.push('/Login');\n      })\n      .catch(error => {\n        console.log(error)\n      })\n      this.props.registerUser(this.state, this.props.history);\n    }\n\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  isValid = () => {\n    const { errors, isValid } = validateInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  render() {\n    const { errors, email, password, isLoading } = this.state;\n\n    return (\n      <div className='login-form'>\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Link to='/'>\n              <Image src='/assets/images/logo.png' size='tiny' centered />\n            </Link>\n\n            <Header as='h2' color='teal' textAlign='center'>\n              Login\n            </Header>\n            <Form size='large'\n              onSubmit={this.onSubmit}\n              error={errors.loginError ? true : false}\n              autoComplete='off'\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid icon='user'\n                  iconPosition='left'\n                  name='email'\n                  placeholder='E-mail'\n                  defaultValue={email}\n                  error={errors.email ? true : false}\n                  onChange={this.onChange}\n                />\n                <Form.Input\n                  fluid icon='lock'\n                  iconPosition='left'\n                  name='password'\n                  placeholder='Password'\n                  type='password'\n                  defaultValue={password}\n                  error={errors.password ? true : false}\n                  onChange={this.onChange}\n                />\n\n                <Message error content={errors.loginError} />\n\n                <Button color='teal' fluid size='large' disabled={isLoading}>\n                  {!isLoading\n                    ? 'Login'\n                    : <Loader active inverted inline size='small' />\n                  }\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              Don't have an account? <Link to='/sign-up'>Sign up!</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nLoginForm.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(LoginForm);\n"]},"metadata":{},"sourceType":"module"}