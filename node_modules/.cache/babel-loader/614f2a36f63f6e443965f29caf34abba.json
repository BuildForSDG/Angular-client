{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport { setCurrentUser, registerSuccess, logoutUser, getErrors } from './actionCreators';\n/**\n * Login user action\n */\n\nexport var loginUser = function loginUser(state, history) {\n  return function (dispatch) {\n    AuthService.login(state.email, state.password).then(function (resp) {\n      console.log(\"response is: \".concat(resp.data));\n\n      if (resp.data.message === 'authorized access') {\n        dispatch(setCurrentUser(state));\n        AuthService.saveToken(resp.data.token);\n        history.push('/');\n      }\n    }).catch(function (error) {\n      dispatch(getErrors({\n        loginError: error\n      }));\n    });\n  };\n};\n/**\n * Logout action\n */\n\nexport var logout = function logout(history) {\n  return function (dispatch) {\n    AuthService.logout();\n    dispatch(logoutUser());\n    history.push('/');\n    window.location.reload();\n  };\n};\n/**\n * Register user action\n */\n\nexport var registerUser = function registerUser(user, history) {\n  return function (dispatch) {\n    AuthService.signup(user).then(function (resp) {\n      console.log('the user is:' + resp);\n\n      if (resp.data.success) {\n        dispatch(registerSuccess());\n        history.push('/api/users/login');\n      }\n    }).catch(function (error) {\n      if (error.response.data) {\n        dispatch(getErrors({\n          registerError: error.response.data.error\n        }));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/realoj/RealProjects/Andela-FB-Innovators/front-endweb/src/store/actions/auth.js"],"names":["AuthService","setCurrentUser","registerSuccess","logoutUser","getErrors","loginUser","state","history","dispatch","login","email","password","then","resp","console","log","data","message","saveToken","token","push","catch","error","loginError","logout","window","location","reload","registerUser","user","signup","success","response","registerError"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,SACCC,cADD,EAECC,eAFD,EAGCC,UAHD,EAICC,SAJD,QAKO,kBALP;AAOA;;;;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,OAAR;AAAA,SAAoB,UAACC,QAAD,EAAc;AAC1DR,IAAAA,WAAW,CAACS,KAAZ,CAAkBH,KAAK,CAACI,KAAxB,EAA+BJ,KAAK,CAACK,QAArC,EACEC,IADF,CACO,UAACC,IAAD,EAAU;AACfC,MAAAA,OAAO,CAACC,GAAR,wBAA4BF,IAAI,CAACG,IAAjC;;AACA,UAAIH,IAAI,CAACG,IAAL,CAAUC,OAAV,KAAsB,mBAA1B,EAA+C;AAC9CT,QAAAA,QAAQ,CAACP,cAAc,CAACK,KAAD,CAAf,CAAR;AACAN,QAAAA,WAAW,CAACkB,SAAZ,CAAsBL,IAAI,CAACG,IAAL,CAAUG,KAAhC;AACAZ,QAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACA;AACD,KARF,EASEC,KATF,CASQ,UAACC,KAAD,EAAW;AACjBd,MAAAA,QAAQ,CACPJ,SAAS,CAAC;AACTmB,QAAAA,UAAU,EAAED;AADH,OAAD,CADF,CAAR;AAKA,KAfF;AAgBA,GAjBwB;AAAA,CAAlB;AAmBP;;;;AAGA,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACjB,OAAD;AAAA,SAAa,UAACC,QAAD,EAAc;AAChDR,IAAAA,WAAW,CAACwB,MAAZ;AACAhB,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACAI,IAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,GALqB;AAAA,CAAf;AAOP;;;;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOtB,OAAP;AAAA,SAAmB,UAACC,QAAD,EAAc;AAC5DR,IAAAA,WAAW,CAAC8B,MAAZ,CAAmBD,IAAnB,EACEjB,IADF,CACO,UAACC,IAAD,EAAU;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,IAA7B;;AACA,UAAIA,IAAI,CAACG,IAAL,CAAUe,OAAd,EAAuB;AACtBvB,QAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACAK,QAAAA,OAAO,CAACa,IAAR,CAAa,kBAAb;AACA;AACD,KAPF,EAQEC,KARF,CAQQ,UAACC,KAAD,EAAW;AACjB,UAAIA,KAAK,CAACU,QAAN,CAAehB,IAAnB,EAAyB;AACxBR,QAAAA,QAAQ,CACPJ,SAAS,CAAC;AACT6B,UAAAA,aAAa,EAAEX,KAAK,CAACU,QAAN,CAAehB,IAAf,CAAoBM;AAD1B,SAAD,CADF,CAAR;AAKA;AACD,KAhBF;AAiBA,GAlB2B;AAAA,CAArB","sourcesContent":["import AuthService from '../../services/AuthService';\nimport {\n\tsetCurrentUser,\n\tregisterSuccess,\n\tlogoutUser,\n\tgetErrors,\n} from './actionCreators';\n\n/**\n * Login user action\n */\nexport const loginUser = (state, history) => (dispatch) => {\n\tAuthService.login(state.email, state.password)\n\t\t.then((resp) => {\n\t\t\tconsole.log(`response is: ${resp.data}`);\n\t\t\tif (resp.data.message === 'authorized access') {\n\t\t\t\tdispatch(setCurrentUser(state));\n\t\t\t\tAuthService.saveToken(resp.data.token);\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(\n\t\t\t\tgetErrors({\n\t\t\t\t\tloginError: error,\n\t\t\t\t})\n\t\t\t);\n\t\t});\n};\n\n/**\n * Logout action\n */\nexport const logout = (history) => (dispatch) => {\n\tAuthService.logout();\n\tdispatch(logoutUser());\n\thistory.push('/');\n\twindow.location.reload();\n};\n\n/**\n * Register user action\n */\nexport const registerUser = (user, history) => (dispatch) => {\n\tAuthService.signup(user)\n\t\t.then((resp) => {\n\t\t\tconsole.log('the user is:' + resp);\n\t\t\tif (resp.data.success) {\n\t\t\t\tdispatch(registerSuccess());\n\t\t\t\thistory.push('/api/users/login');\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tif (error.response.data) {\n\t\t\t\tdispatch(\n\t\t\t\t\tgetErrors({\n\t\t\t\t\t\tregisterError: error.response.data.error,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t});\n};\n"]},"metadata":{},"sourceType":"module"}